#ifndef UI_H
#define UI_H

#include "GLYPH.h"

#define MAX_WINDOWS 5

static const __flash uint8_t WINDOW_TILES[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Empty
    0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0x10, 0x10,  // Top-Left
    0x10, 0x10, 0x10, 0xe0, 0x00, 0x00, 0x00, 0x00,  // Top-Right
    0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x08, 0x08,  // Bottom-Left
    0x08, 0x08, 0x08, 0x07, 0x00, 0x00, 0x00, 0x00,  // Bottom-Right
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,  // Bottom
    0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,  // Left
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00,  // Right
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,  // Top
};

static const __flash uint8_t WINDOW_TILE_MASKS[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xff, 0xff, 0xff, 0x1f, 0x0f, 0x0f, 0x0f,
    0x0f, 0x0f, 0x0f, 0x1f, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xf8, 0xf0, 0xf0, 0xf0,
    0xf0, 0xf0, 0xf0, 0xf8, 0xff, 0xff, 0xff, 0xff,
    0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0,
    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
    0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
};

#define WIN_EM 0*8
#define WIN_TL 1*8
#define WIN_TR 2*8
#define WIN_BL 3*8
#define WIN_BR 4*8
#define WIN_B 5*8
#define WIN_L 6*8
#define WIN_R 7*8
#define WIN_T 8*8


typedef enum { FIXED, TIMED, DISMISS, CHOOSE } WindowActions;

typedef struct Window {
    int8_t x;
    int8_t y;

    int8_t w;
    int8_t h;

    WindowActions actions;

    uint32_t timer;

    char* content;

    void (*_callback)( uint8_t i );
} Window;

void init_windows( void );
bool add_window(Window* w);
void update_windows( void );
void draw_windows( void );
void draw_window(Window* w);

Window* windows[MAX_WINDOWS];
Window* focus_window;

#endif
